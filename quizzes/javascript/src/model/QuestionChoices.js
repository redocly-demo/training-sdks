/**
 * Quizzes
 * Quizzes API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuestionChoices model module.
 * @module model/QuestionChoices
 * @version 1.0.0
 */
class QuestionChoices {
    /**
     * Constructs a new <code>QuestionChoices</code>.
     * @alias module:model/QuestionChoices
     * @param a {Object} 
     * @param b {Object} 
     * @param c {Object} 
     * @param d {Object} 
     */
    constructor(a, b, c, d) { 
        
        QuestionChoices.initialize(this, a, b, c, d);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, a, b, c, d) { 
        obj['a'] = a;
        obj['b'] = b;
        obj['c'] = c;
        obj['d'] = d;
    }

    /**
     * Constructs a <code>QuestionChoices</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuestionChoices} obj Optional instance to populate.
     * @return {module:model/QuestionChoices} The populated <code>QuestionChoices</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuestionChoices();

            if (data.hasOwnProperty('a')) {
                obj['a'] = ApiClient.convertToType(data['a'], Object);
            }
            if (data.hasOwnProperty('b')) {
                obj['b'] = ApiClient.convertToType(data['b'], Object);
            }
            if (data.hasOwnProperty('c')) {
                obj['c'] = ApiClient.convertToType(data['c'], Object);
            }
            if (data.hasOwnProperty('d')) {
                obj['d'] = ApiClient.convertToType(data['d'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuestionChoices</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuestionChoices</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuestionChoices.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

QuestionChoices.RequiredProperties = ["a", "b", "c", "d"];

/**
 * @member {Object} a
 */
QuestionChoices.prototype['a'] = undefined;

/**
 * @member {Object} b
 */
QuestionChoices.prototype['b'] = undefined;

/**
 * @member {Object} c
 */
QuestionChoices.prototype['c'] = undefined;

/**
 * @member {Object} d
 */
QuestionChoices.prototype['d'] = undefined;






export default QuestionChoices;

