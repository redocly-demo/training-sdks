/**
 * Quizzes
 * Quizzes API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Quiz model module.
 * @module model/Quiz
 * @version 1.0.0
 */
class Quiz {
    /**
     * Constructs a new <code>Quiz</code>.
     * @alias module:model/Quiz
     * @param name {Object} 
     * @param passingScore {Object} 
     */
    constructor(name, passingScore) { 
        
        Quiz.initialize(this, name, passingScore);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, passingScore) { 
        obj['name'] = name;
        obj['passingScore'] = passingScore;
    }

    /**
     * Constructs a <code>Quiz</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Quiz} obj Optional instance to populate.
     * @return {module:model/Quiz} The populated <code>Quiz</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Quiz();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], Object);
            }
            if (data.hasOwnProperty('passingScore')) {
                obj['passingScore'] = ApiClient.convertToType(data['passingScore'], Object);
            }
            if (data.hasOwnProperty('questions')) {
                obj['questions'] = ApiClient.convertToType(data['questions'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Quiz</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Quiz</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Quiz.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Quiz.RequiredProperties = ["name", "passingScore"];

/**
 * @member {Object} name
 */
Quiz.prototype['name'] = undefined;

/**
 * @member {Object} passingScore
 */
Quiz.prototype['passingScore'] = undefined;

/**
 * @member {Object} questions
 */
Quiz.prototype['questions'] = undefined;






export default Quiz;

