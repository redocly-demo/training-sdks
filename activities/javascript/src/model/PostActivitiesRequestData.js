/**
 * Activities
 * Activities.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostActivitiesRequestData model module.
 * @module model/PostActivitiesRequestData
 * @version 1.0.0
 */
class PostActivitiesRequestData {
    /**
     * Constructs a new <code>PostActivitiesRequestData</code>.
     * @alias module:model/PostActivitiesRequestData
     * @param type {module:model/PostActivitiesRequestData.TypeEnum} Type of activity to be created.
     */
    constructor(type) { 
        
        PostActivitiesRequestData.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PostActivitiesRequestData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostActivitiesRequestData} obj Optional instance to populate.
     * @return {module:model/PostActivitiesRequestData} The populated <code>PostActivitiesRequestData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostActivitiesRequestData();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], Object);
            }
            if (data.hasOwnProperty('item')) {
                obj['item'] = ApiClient.convertToType(data['item'], Object);
            }
            if (data.hasOwnProperty('answer')) {
                obj['answer'] = ApiClient.convertToType(data['answer'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostActivitiesRequestData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostActivitiesRequestData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostActivitiesRequestData.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PostActivitiesRequestData.RequiredProperties = ["type"];

/**
 * Type of activity to be created.
 * @member {module:model/PostActivitiesRequestData.TypeEnum} type
 */
PostActivitiesRequestData.prototype['type'] = undefined;

/**
 * @member {Object} name
 */
PostActivitiesRequestData.prototype['name'] = undefined;

/**
 * @member {Object} item
 */
PostActivitiesRequestData.prototype['item'] = undefined;

/**
 * @member {Object} answer
 */
PostActivitiesRequestData.prototype['answer'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {Object}
 * @readonly
 */
PostActivitiesRequestData['TypeEnum'] = {

    /**
     * value: "checklist"
     * @const
     */
    "checklist": "checklist",

    /**
     * value: "quiz"
     * @const
     */
    "quiz": "quiz"
};



export default PostActivitiesRequestData;

